separator		#
identifier		include
operator		<
identifier		stdio
separator		.
identifier		h
operator		>
separator		#
identifier		include
operator		<
identifier		stdlib
separator		.
identifier		h
operator		>
keyword			int
identifier		a
separator		[
num			100
separator		]
separator		[
num			100
separator		]
separator		;
keyword			int
identifier		dp
separator		[
num			100
separator		]
separator		[
num			100
separator		]
separator		;
keyword			int
Line5illegal variable:start with digit
num			
operator		=
num			0
separator		;
keyword			int
separator		;
keyword			int
identifier		Min
separator		(
keyword			int
identifier		a
separator		,
keyword			int
identifier		b
separator		)
separator		{
keyword			if
separator		(
identifier		a
operator		<
identifier		b
separator		)
separator		{
keyword			return
identifier		a
separator		;
separator		}
identifier		else
separator		{
keyword			return
identifier		b
separator		;
separator		}
separator		}
operator		/
keyword			int
identifier		getMin
separator		(
keyword			int
identifier		m
separator		,
keyword			int
identifier		n
separator		)
separator		{
keyword			int
identifier		min
separator		;
identifier		dp
separator		[
num			0
separator		]
separator		[
num			0
separator		]
operator		=
identifier		a
separator		[
num			0
separator		]
separator		[
num			0
separator		]
separator		;
identifier		for
separator		(
keyword			int
identifier		i
operator		=
num			1
separator		;
identifier		i
operator		<
identifier		m
separator		;
identifier		i
operator		++
separator		)
separator		{
identifier		dp
separator		[
identifier		i
separator		]
separator		[
num			0
separator		]
operator		=
identifier		a
separator		[
identifier		i
separator		]
separator		[
num			0
separator		]
operator		+
identifier		dp
separator		[
identifier		i
operator		-
num			1
separator		]
separator		[
num			0
separator		]
separator		;
separator		}
identifier		for
separator		(
keyword			int
identifier		i
operator		=
num			1
separator		;
identifier		i
operator		<
identifier		n
separator		;
identifier		i
operator		++
separator		)
separator		{
identifier		dp
separator		[
num			0
separator		]
separator		[
identifier		i
separator		]
operator		=
identifier		a
separator		[
num			0
separator		]
separator		[
identifier		i
separator		]
operator		+
identifier		dp
separator		[
num			0
separator		]
separator		[
identifier		i
operator		-
num			1
separator		]
separator		;
separator		}
identifier		for
separator		(
keyword			int
identifier		i
operator		=
num			1
separator		;
identifier		i
operator		<
identifier		m
separator		;
identifier		i
operator		++
separator		)
separator		{
identifier		for
separator		(
keyword			int
identifier		j
operator		=
num			1
separator		;
identifier		j
operator		<
identifier		n
separator		;
identifier		j
operator		++
separator		)
separator		{
identifier		min
operator		=
identifier		Min
separator		(
identifier		dp
separator		[
identifier		i
operator		-
num			1
separator		]
separator		[
identifier		j
separator		]
separator		,
identifier		dp
separator		[
identifier		i
separator		]
separator		[
identifier		j
operator		-
num			1
separator		]
separator		)
separator		;
identifier		dp
separator		[
identifier		i
separator		]
separator		[
identifier		j
separator		]
operator		=
identifier		min
operator		+
identifier		a
separator		[
identifier		i
separator		]
separator		[
identifier		j
separator		]
separator		;
separator		}
separator		}
keyword			return
identifier		dp
separator		[
identifier		m
operator		-
num			1
separator		]
separator		[
identifier		n
operator		-
num			1
separator		]
separator		;
separator		}
keyword			int
identifier		main
separator		(
separator		)
separator		{
keyword			int
identifier		m
separator		,
identifier		n
separator		;
identifier		scanf
separator		(
separator		"
character string	%d %d
separator		"
separator		,
separator		,
separator		)
separator		;
identifier		for
separator		(
keyword			int
identifier		i
operator		=
num			0
separator		;
identifier		i
operator		<
identifier		m
separator		;
identifier		i
operator		++
separator		)
separator		{
identifier		for
separator		(
keyword			int
identifier		j
operator		=
num			0
separator		;
identifier		j
operator		<
identifier		n
separator		;
identifier		j
operator		++
separator		)
separator		{
identifier		scanf
separator		(
separator		"
character string	%d
separator		"
separator		,
separator		[
identifier		i
separator		]
separator		[
identifier		j
separator		]
separator		)
separator		;
separator		}
separator		}
identifier		printf
separator		(
separator		"
character string	%d\n
separator		"
separator		,
identifier		getMin
separator		(
identifier		m
separator		,
identifier		n
separator		)
separator		)
separator		;
identifier		printf
separator		(
separator		"
character string	succeed
separator		"
separator		)
keyword			return
num			0
separator		;
total	49	lines
total	147	words
total	700	chars
